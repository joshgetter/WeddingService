<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <OutputPath>bin\Debug</OutputPath>
    <NoStdLib>false</NoStdLib>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <OutputPath>bin\Release</OutputPath>
    <NoStdLib>false</NoStdLib>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'PiRelease|AnyCPU' ">
    <IntermediateOutputPath>obj\PiRelease</IntermediateOutputPath>
    <DebugSymbols>false</DebugSymbols>
    <DebugType></DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\PiRelease</OutputPath>
    <DefineConstants></DefineConstants>
    <NoWarn></NoWarn>
    <NoStdLib>false</NoStdLib>
    <CustomCommands>
      <CustomCommands>
        <Command>
          <type>AfterBuild</type>
          <command>dotnet publish -c PiRelease; scp -r ${TargetDir}/publish pi@hounvs.ddns.net /home/pi/UploadService</command>
          <workingdir>${SolutionDir}</workingdir>
          <externalConsole>True</externalConsole>
        </Command>
      </CustomCommands>
    </CustomCommands>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'PiDebug|AnyCPU' ">
    <IntermediateOutputPath>obj\PiDebug</IntermediateOutputPath>
    <DebugSymbols>false</DebugSymbols>
    <DebugType></DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\PiDebug</OutputPath>
    <DefineConstants></DefineConstants>
    <NoWarn></NoWarn>
    <NoStdLib>false</NoStdLib>
    <CustomCommands>
      <CustomCommands>
        <Command>
          <type>AfterBuild</type>
          <command>dotnet publish -c PiDebug; ssh pi@hounvs.ddns.net "rm -r /home/pi/UploadService"; scp -r ${TargetDir}/publish pi@hounvs.ddns.net:/home/pi/UploadService</command>
          <workingdir>${SolutionDir}</workingdir>
          <externalConsole>True</externalConsole>
        </Command>
      </CustomCommands>
    </CustomCommands>
  </PropertyGroup>
  <ItemGroup>
    <Folder Include="wwwroot\" />
    <Folder Include="Models\" />
    <Folder Include="Helpers\" />
    <Folder Include="token.json\" />
    <Folder Include="Scripts\" />
  </ItemGroup>
    
  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.2.0" PrivateAssets="All" />
    <PackageReference Include="Google.Apis.Drive.v3" Version="1.38.0.1491" />
  </ItemGroup>

  <ItemGroup>
    <Content Remove="credentials.json" />
  </ItemGroup>
  <ItemGroup>
    <None Include="credentials.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
    <None Update="token.json\Google.Apis.Auth.OAuth2.Responses.TokenResponse-user">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="Scripts\StartDev.sh">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="Scripts\StartProd.sh">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="hounvs.ddns.net.pfx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="CertificateCredential.txt">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  <ItemGroup>
    <Compile Condition=" '$(EnableDefaultCompileItems)' == 'true' " Update="Startup.cs">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </Compile>
  </ItemGroup>
<ItemGroup>
  <Content Update="appsettings.Development.json" CopyToPublishDirectory="Always"><CopyToOutputDirectory>Always</CopyToOutputDirectory>
</Content>
  <Content Update="appsettings.json" CopyToPublishDirectory="Always"><CopyToOutputDirectory>Always</CopyToOutputDirectory>
</Content>
</ItemGroup>
</Project>
